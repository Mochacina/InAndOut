<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<!-- xml 을 java 에서 쓰기 위해 연결되는 interface 가 필요 하다. -->
<mapper namespace="com.ino.member.dao.MemberDAO">

	<select id="overlay" resultType="int">
		SELECT COUNT(user_id) FROM user
			WHERE user_id = #{param1}
	</select>
	
	<select id="overlay2" resultType="int">
		SELECT COUNT(nickname) FROM user
			WHERE nickname = #{param1}
	</select>
	 
	<insert id="userRegist" parameterType="hashmap">
		INSERT INTO user(
			user_id,user_pw,user_name,nickname,post_num,sido,sigungu,
			left_addr,phone_num,email,user_state,interest_biz_id,user_div
		)VALUES(
			#{user_id},#{user_pw},#{user_name},#{nickname},#{post_num},#{left_addr}
			,#{sido},#{sigungu},#{phone_num},#{email},#{user_state},#{interest_biz_id}
			,#{user_div}
		)
	</insert>
	
	<select id="normaTopList" resultType="String">
		select  user_id,count(user_id) as 글갯수
 		 FROM sales   
	  		GROUP BY user_id ORDER BY 글갯수 desc  
	</select>
	
	<select id="findTopPhoto" resultType="String">
		select new_photo_name
			from photo
		where photo_div 
		in(#{param1},#{param2},#{param3},#{param4},#{param5}) and cate_no = 'p001'
	</select>
	

	
		<insert id="riderRegist" parameterType="hashmap">
		INSERT INTO user(
			user_id,user_pw,user_name,nickname,post_num,sido,sigungu,
			left_addr,phone_num,email,user_state,interest_biz_id,user_div
		)VALUES(
			#{user_id},#{user_pw},#{user_name},#{nickname},#{post_num},#{left_addr}
			,#{sido},#{sigungu},#{phone_num},#{email},#{user_state},#{interest_biz_id}
			,#{user_div}
			
		)
	</insert>
	
	
	<insert id="bizregist" >
		INSERT INTO auth_extra(
			user_id,biz_num,biz,store_name,state
			
		)VALUES(
			#{param1},#{param2},#{param3},#{param4},#{param5}
		)
	</insert>
	
	<update id="userChange">
		UPDATE user SET user_div = #{param2} WHERE user_id = #{param1};
	</update>
	
	
	
		<insert id="riderbizregist" >
		INSERT INTO rider_extra(
			user_id,biz_num,intro,news,store_time,store_name
			
		)VALUES(
			#{param1},#{param2},#{param3},#{param4},#{param5},#{param6}
		)
	</insert>
	
	
	
	<insert id="join" parameterType="hashmap">
		INSERT INTO user(
			user_id,user_pw,user_name,nickname,post_num,
			left_addr,phone_num,email,user_state,interest_biz_id
		)VALUES(
			#{user_id},#{user_pw},#{user_name},#{nickname},#{post_num},#{left_addr}
			,#{phone_num},#{email},#{user_state},#{interest_biz_id}
		)
	</insert>
	
	<insert id="fileWrite">
			INSERT INTO photo(ori_photo_name, new_photo_name,photo_div,cate_no)
				VALUES(#{param1},#{param2},#{param3},#{param4})
	</insert>
		
	<insert id="bizfileWrite">
		INSERT INTO photo(ori_photo_name, new_photo_name,photo_div,cate_no)
			VALUES(#{param1},#{param2},#{param3},#{param4})
	</insert>
	
	<select id="login" resultType="int">
		SELECT COUNT(user_id) FROM user WHERE
			user_id = #{param1} AND user_pw = #{param2}	
	</select>
	
	
	<select id="afterList" 
	resultType="string">
		SELECT p.new_photo_name FROM photo p 
		WHERE photo_div = (select user_id from user where user_id = #{param1} and cate_no = 'p001')
	</select>
	
	<select id="userCategory" 
	resultType="string">
		SELECT user_div FROM user
		WHERE user_id =  #{param1}
	</select>
	
<!--  SELECT p.new_photo_name FROM photo p WHERE photo_div = 'bb' and cate_no = 'p001';-->
	
	<delete id="delete">
		DELETE FROM member WHERE id = #{param1}
	</delete>
	
	<select id="detail" resultType="hashmap">
		SELECT * FROM member WHERE id = #{param1}
	</select>
	
	
	
</mapper>