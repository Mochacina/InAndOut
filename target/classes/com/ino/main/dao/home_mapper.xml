<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<!-- xml 을 java 에서 쓰기 위해 연결되는 interface 가 필요 하다. -->
<mapper namespace="com.ino.main.dao.HomeDAO">

	<select id="overlay" resultType="int">
		SELECT COUNT(user_id) FROM user
			WHERE user_id = #{param1}
	</select>
	
	<select id="overlay2" resultType="int">
		SELECT COUNT(nickname) FROM user
			WHERE nickname = #{param1}
	</select>
	 
	<insert id="userRegist" parameterType="hashmap">
		INSERT INTO user(
			user_id,user_pw,user_name,nickname,post_num,
			left_addr,phone_num,email,user_state,interest_biz_id
		)VALUES(
			#{user_id},#{user_pw},#{user_name},#{nickname},#{post_num},#{left_addr}
			,#{phone_num},#{email},#{user_state},#{interest_biz_id}
		)
	</insert>
	
	<insert id="bizregist" >
		INSERT INTO auth_extra(
			user_id,biz_num,biz,store_name,state
			
		)VALUES(
			#{param1},#{param2},#{param3},#{param4},#{param5}
		)
	</insert>
	
	<insert id="join" parameterType="hashmap">
		INSERT INTO user(
			user_id,user_pw,user_name,nickname,post_num,
			left_addr,phone_num,email,user_state,interest_biz_id
		)VALUES(
			#{user_id},#{user_pw},#{user_name},#{nickname},#{post_num},#{left_addr}
			,#{phone_num},#{email},#{user_state},#{interest_biz_id}
		)
	</insert>
	
	<insert id="fileWrite">
			INSERT INTO photo(ori_photo_name, new_photo_name,photo_div,cate_no)
				VALUES(#{param1},#{param2},#{param3},#{param4})
	</insert>
		
	<insert id="bizfileWrite">
		INSERT INTO photo(ori_photo_name, new_photo_name,photo_div,cate_no)
			VALUES(#{param1},#{param2},#{param3},#{param4})
	</insert>
	
	<select id="login" resultType="int">
		SELECT COUNT(user_id) FROM user WHERE
			user_id = #{param1} AND user_pw = #{param2}	
	</select>
	
	
	<select id="afterList" 
	resultType="com.ino.main.dto.HomeDTO">
		SELECT new_photo_name FROM photo WHERE photo_div = (select user_id from user where user_id = #{param1});
	</select>
	
<!-- 		SELECT user_id FROM user WHERE  user_id = #{param1}
		SELECT newFileName FROM photo WHERE user_id = #{param1}
	
		SELECT newFileName FROM photo WHERE user_id = (SELECT user_id FROM user WHERE  user_id = #{param1})
	 SELECT new_photo_name FROM photo WHERE photo_div = (select user_id from user where user_id = #{param1});
	 -->
	
	<delete id="delete">
		DELETE FROM member WHERE id = #{param1}
	</delete>
	
	<select id="detail" resultType="hashmap">
		SELECT * FROM member WHERE id = #{param1}
	</select>
	
	
	
</mapper>